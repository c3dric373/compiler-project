TEST-CASE: pld-test-output/tests-Init-test-coco
TEST OK
TEST-CASE: pld-test-output/tests-Init-test-rendu
TEST OK
TEST-CASE: pld-test-output/tests-Init-bitwise_int-0_simple_or
TEST OK
TEST-CASE: pld-test-output/tests-Init-bitwise_int-1_combination_three
TEST OK
TEST-CASE: pld-test-output/tests-Init-bitwise_int-0_simple_and
TEST OK
TEST-CASE: pld-test-output/tests-Init-bitwise_int-0_simple_xor
TEST OK
TEST-CASE: pld-test-output/tests-Init-while-0_simple_while_leq
TEST OK
TEST-CASE: pld-test-output/tests-Init-while-0_simple_while_greater
TEST OK
TEST-CASE: pld-test-output/tests-Init-while-0_simple_while_smaller
TEST OK
TEST-CASE: pld-test-output/tests-Init-while-0_simple_while_neq
TEST OK
TEST-CASE: pld-test-output/tests-Init-while-0_while_simple_geq
TEST OK
TEST-CASE: pld-test-output/tests-Init-while-1_while_with_if
TEST OK
TEST-CASE: pld-test-output/tests-Init-while-2_while_with_equal
TEST OK
TEST-CASE: pld-test-output/tests-Init-bloc-0_simple_nested_bloc
TEST OK
TEST-CASE: pld-test-output/tests-Init-bloc-0_simple_bloc
TEST OK
TEST-CASE: pld-test-output/tests-Init-if_else-0_simple_ifelse
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-addsub4
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-3_addition
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-substraction3
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-8_multiplication3Op
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-10_CombineMultAdd_2
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-2-variable-neg
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-9_returnMult
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-8_multiplication4Op
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-8_multiplicationSimple
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-10_CombineMultAdd_1
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-11_CombineMultSub_2
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-substraction4
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-addmultsub6
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-addmultsub3
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-0_Main
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-11_CombineMultSub_1
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-addition4
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-9_returnSub
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-3_declaration
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-2_affectation
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-8_multiplicationVariables
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-8_multiplication3Variables
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-2_addition
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-11_CombineMultSub_var1
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-9_returnConst
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-substraction2
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-addsub5
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-4_defdeclexpr
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-11_CombineMultSub_var
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-2-expr-neg
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-10_CombineMultAdd_var1
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-addmultsub4
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-9_returnName
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-10_CombineMultAdd_var2
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-1return-neg
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-5_definition
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-addmultsub5
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-auto-affectation
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-1_fail
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-addsub3
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-9_returnAdd
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-init-11_CombineMultSub_var2
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-analyse-statique-5variable_non_affecte_expr_complexe_sub-mult-add2
TEST FAIL (your compiler accepts an invalid program)
TEST-CASE: pld-test-output/tests-Init-easy-analyse-statique-2variable_non_affecte_expr_complexe_add1
TEST FAIL (your compiler accepts an invalid program)
TEST-CASE: pld-test-output/tests-Init-easy-analyse-statique-1variable-non-affecte
TEST FAIL (your compiler accepts an invalid program)
TEST-CASE: pld-test-output/tests-Init-easy-analyse-statique-4variable_non_affecte_expr_complexe_sub2
TEST FAIL (your compiler accepts an invalid program)
TEST-CASE: pld-test-output/tests-Init-easy-analyse-statique-5variable_non_affecte_expr_complexe_sub-mult-add1
TEST FAIL (your compiler accepts an invalid program)
TEST-CASE: pld-test-output/tests-Init-easy-analyse-statique-4variable_non_affecte_expr_complexe_sub1
TEST FAIL (your compiler accepts an invalid program)
TEST-CASE: pld-test-output/tests-Init-easy-analyse-statique-3variable_non_affecte_expr_complexe_mult2
TEST FAIL (your compiler accepts an invalid program)
TEST-CASE: pld-test-output/tests-Init-easy-analyse-statique-2variable_non_affecte_expr_complexe_add2
TEST FAIL (your compiler accepts an invalid program)
TEST-CASE: pld-test-output/tests-Init-easy-analyse-statique-3variable_non_affecte_expr_complexe_mult1
TEST FAIL (your compiler accepts an invalid program)
TEST-CASE: pld-test-output/tests-Init-easy-minus-unaire-0_minus_var
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-minus-unaire-0_minus_after_plus
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-minus-unaire-0_minus_after_mult
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-minus-unaire-0_minus_ret
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-minus-unaire-0_minus_after_int
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-paranthese-2_mult
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-paranthese-1_add-associativite-gauche
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-paranthese-2_mult-associativite-droite
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-paranthese-1-MULT-associativite-droite
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-paranthese-1_add-associativite-droite
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-paranthese-2_mult-associativite-gauche
TEST OK
TEST-CASE: pld-test-output/tests-Init-easy-paranthese-1_add
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-combine_all
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-cmpgreaterequal-0_simple_cmp_great_eq
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-cmpgreaterequal-1_nested_cmp_great_eq
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-neq-1_nested_neq
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-neq-0_neq_simple
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-cmpgreater-0_simple_cmp_great
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-cmpgreater-1_nested_cmp_great
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-cmpeq-0_simple_cmp_eq
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-cmpeq-1_nested_cmp_eq_false
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-cmpeq-0_cmp_great_false
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-cmpeq-nestedIf_cmpeq
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-cmplowerequal-0_simple_cmp_lower_eq
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-cmplowerequal-1_nested_cmp_lower_eq
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-cmplower-1_nested_cmp_lower
TEST OK
TEST-CASE: pld-test-output/tests-Init-if-cmplower-0_simple_cmp_lower
TEST OK
